@model Pastebook.Models.UserModel

<div id="profile">
    <div class="container">
        <div class="row">
            <div id="profile-header" class="text-center col-md-12">
                <div id="profile-profile-picture">
                    <img src="~/Content/Images/pastebook-default.png" id="profile-prof-pic" class="img-circle" alt="Profile Picture">
                </div>

                <div>
                    <div id="profile-fullname">
                        @Html.ActionLink(Model.Firstname + " " + Model.Lastname, "Profile", "User")
                    </div>
                    <div id="profile-username">
                        (@Model.Username)
                    </div>

                    <div id="interactButtons">
                        @if (!(Model.Id == (int)Session["UserId"]))
                        {
                            <button id="btnAddFriend" class="btn"><span class="glyphicon glyphicon-plus"></span>Add Friend</button>
                            <button id="btnBlock" class="btn"><span class="glyphicon glyphicon-remove"></span>Block</button>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div id="profile-content">
                <div class="col-md-4" id="profile-user-details">
                    <h3>
                        Introduction
                    </h3>
                    @if (Model.AboutMe != null)
                    {
                    @Html.DisplayFor(model => model.AboutMe, Model.AboutMe)
                    }

                    else
                    {
                        <a data-value=@Model.Id>+ Describe who you are</a>
                    }

                    <hr>

                    <h3>
                        Personal Information
                    </h3>

                    <div id="profile-user-gender">
                        @Html.LabelFor(model=>model.Gender):
                        @Html.DisplayFor(model => model.Gender, Model.Gender)
                    </div>

                    <div id="profile-user-country">
                        @Html.LabelFor(model => model.CountryId):
                        @Html.DisplayFor(model => model.CountryId, Model.CountryId)
                    </div>

                    <div id="profile-user-birthday">
                        @Html.LabelFor(model => model.Birthday):
                        @Model.Birthday.ToString("MMMM dd, yyyy")
                    </div>

                    <hr>

                    <h3>
                        Contact Information
                    </h3>

                    <div id="profile-user-contactnumber">
                        @Html.LabelFor(model=>model.MobileNumber):
                        @Html.DisplayFor(model => model.MobileNumber, Model.MobileNumber)
                    </div>

                    <div id="profile-user-email">
                        @Html.LabelFor(model => model.EmailAddress):
                        @Html.DisplayFor(model => model.EmailAddress, Model.EmailAddress)
                    </div>

                    <hr>

                    <h3>
                        Pastebook Information
                    </h3>

                    <div id="profile-user-contactnumber">
                        @Html.LabelFor(model => model.DateCreated):
                        @Model.DateCreated.ToString("MMMM dd, yyyy")
                    </div>

                </div>
            </div>
            <div class="col-md-8">
                <div id="writePost" class="col-md-12">
                    <div id="writePost-header">
                        <span class="glyphicon glyphicon-pencil"></span>Status
                    </div>

                        <textarea rows="5" cols="70" id="textAreaPost" placeholder="What's on your mind?" class="col-md-12"></textarea>
                        <div class="clearfix"><input type="button" value="Post" class="btn pull-right" id="btnPost" /></div>
                </div>

                <div id="timelinePost">
                    @{Html.RenderAction("GetUserPosts", "Post");}
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script>
        var createPostURL = '@Url.Action("CreatePost","Post")'
        var addLikeURL = '@Url.Action("AddLike","Reaction")'
        var addCommentURL = '@Url.Action("AddComment","Reaction")'
        var addNotificationURL = '@Url.Action("AddNotification", "Notification")'

        $(document).ready(function () {
            $('.post-comments').hide();

            $(document).delegate("#btnPost","click", function () {
                var data = {
                    content: $('#textAreaPost').val(),
                }

                $.ajax({
                    url: createPostURL,
                    data: data,
                    type: 'POST',
                    success: function (data) {
                        $.ajax({
                            url: '@Url.Action("GetUserPosts","Post")',
                            dataType: "html",
                            success: function (result)
                            {
                                $("#timelinePost").html(result);
                                $('#textAreaPost').val('')
                                $('.post-comments').hide();
                            }
                        });
                    },

                    error: function () {
                        alert('Something went wrong.')
                    }
                })

            });


            $(document).delegate(".post-reaction-like", "click", function () {
                var data = {
                    postId: this.value,
                }
                $.ajax({
                    url: addLikeURL,
                    data: data,
                    type: 'POST',
                    success: function (data) {
                        $.ajax({
                            url: '@Url.Action("GetUserPosts", "Post")',
                            dataType: "html",
                            success: function (result) {
                                $("#timelinePost").html(result);
                                $('.post-comments').hide();
                            }
                        });
                    },

                    error: function () {
                        alert('Something went wrong.')
                    }
                })

            });

            $(document).delegate("#btnComment", "click", function () {
                var data = {
                    postId: this.value,
                    content: $(".textArea-comment[value="+this.value+"]").val()
                }
                $.ajax({
                    url: addCommentURL,
                    data: data,
                    type: 'POST',
                    success: function (data) {

                        $.ajax({
                            url: '@Url.Action("GetUserPosts", "Post")',
                            dataType: "html",
                            success: function (result) {
                                $("#timelinePost").html(result);
                                $('.post-comments').hide();
                            }
                        });

                        $(".textArea-comment[value=" + this.value + "]").val('')
                        $('.post-comments[value=' + data.postId + ']').show();
                    },

                    error: function () {
                        alert('Something went wrong.')
                    }
                })

            });

            $(document).delegate(".post-reaction-comment", "click", function () {
                if ($('.post-comments[value='+this.value+']').is(':visible') == false)
                {
                    $('.post-comments[value='+this.value+']').show();
                }

                else
                {
                    $('.post-comments[value=' + this.value + ']').hide();
                }

            });

            $(document).delegate(".comment-count", "click", function () {
                if ($('.post-comments[value=' + $(this).data("value") + ']').is(':visible') == false) {
                    $('.post-comments[value=' + $(this).data("value") + ']').show();
                }

                else {
                    $('.post-comments[value=' + $(this).data("value") + ']').hide();
                }

            });

        });
    </script>
}


