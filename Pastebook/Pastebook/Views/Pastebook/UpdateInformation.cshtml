@model Pastebook.Models.EditProfileViewModel

@{
    ViewBag.Title = "Update User Information";
}

@using (Html.BeginForm("UpdateInformation", "Profile", FormMethod.Post))
{
<div class="form-horizontal container">
    <div class="col-md-offset-2 col-md-8" id="edit-profile">
    <span class="edit-profile-header">Update Information</span>
    <hr />
    <span class="edit-profile-subheader">Fill up the required fields(*)</span>

    <div id="edit-basic-info" class="container">
            <div class="form-group">
                <span class="col-md-4"><span class="glyphicon glyphicon-user"></span> Username*</span>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.USER_NAME, new { htmlAttributes = new { @class = "text-line", placeholder = "username", id="txtUsername" } })
                    @Html.ValidationMessageFor(model => model.User.USER_NAME, "", new { @class = "text-danger" })
                    <span class="label-danger validation" id="usernameValidation"></span>
                </div>
            </div>

            <div class="form-group">
                <span class="col-md-4"><span class="glyphicon glyphicon-user"></span> Firstname*</span>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.FIRST_NAME, new { htmlAttributes = new { @class = "text-line", placeholder = "first name" } })
                    @Html.ValidationMessageFor(model => model.User.FIRST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                 <span class="col-md-4"><span class="glyphicon glyphicon-user"></span> Lastname*</span>

                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.LAST_NAME, new { htmlAttributes = new { @class = "text-line", placeholder = "last name" } })
                    @Html.ValidationMessageFor(model => model.User.LAST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <span class="col-md-4"><span class="glyphicon glyphicon-gift"></span> Birthday*</span>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.User.BIRTHDAY, new { htmlAttributes = new { @class = "text-line", @type = "date", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                        @Html.ValidationMessageFor(model => model.User.BIRTHDAY, "", new { @class = "text-danger" })
                    </div>
            </div>

                <div class="form-group">
                    <span class="col-md-4">
                    <span class="glyphicon glyphicon-home"></span> Country*</span>
                @{
                    List<SelectListItem> listOfCountries = new List<SelectListItem>();
                    listOfCountries = (List<SelectListItem>)ViewBag.Countries;
                    listOfCountries.Where(x => x.Value == Model.User.COUNTRY_ID.ToString()).SingleOrDefault().Selected = true;
                }
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.User.COUNTRY_ID, listOfCountries, "select country", new { @class = "text-line" })
                        @Html.ValidationMessageFor(model => model.User.COUNTRY_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

            <div class="form-group">
                <span class="col-md-4"><span class="fa fa-venus-mars"></span> Gender</span>
                @{
                    List<SelectListItem> listOfGender = new List<SelectListItem>();
                    listOfGender = (List<SelectListItem>)ViewBag.Genders;
                    listOfGender.Where(x => x.Value == Model.User.GENDER.ToString()).SingleOrDefault().Selected = true;
                }
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.User.GENDER, listOfGender, "select gender", new { @class = "text-line" })
                        @Html.ValidationMessageFor(model => model.User.GENDER, "", new { @class = "text-danger" })
                    </div>
            </div>

            <div class="form-group">
                <span class="col-md-4"><span class="glyphicon glyphicon-phone"></span> Mobile Number</span>

                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.MOBILE_NO, new { htmlAttributes = new { @class = "text-line", placeholder = "mobile number" } })
                    @Html.ValidationMessageFor(model => model.User.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="pull-right ">
                    <input type="submit" value="Update Account" class="btn btn-default" />
                    <input type="button" value="Cancel" class="btn btn-default" id="btnCancel" />
                </div>
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
            var checkUsernameExistUrl = '@Url.Action("CheckIfUsernameExist", "Pastebook")'
            var checkUsernameYourCurrentUsernameUrl = '@Url.Action("CheckIfUsernameYourCurrentUsername", "Profile")'
            var result = '@ViewBag.Result';
    </script>
    <script>
        $(document).ready(function () {
            if (result) {
                $("#successModal-header").text("Success")
                $("#successModal-body").text("User information updated successfully")
                $("#successModal").modal('show')
            }

            $("#txtUsername").blur(function () {
                var data = {
                    username: $("#txtUsername").val()
                }

                var username = $("#txtUsername").val();
                $.ajax({
                    url: checkUsernameYourCurrentUsernameUrl,
                    data: data,
                    type: 'POST',
                    success: function (data) {
                        if (data.result) {
                            $("#usernameValidation").text("This is your current username");
                        }
                        else {
                            var data = {
                                username: username
                            }
                            $.ajax({
                                url: checkUsernameExistUrl,
                                data: data,
                                type: 'POST',
                                success: function (data) {
                                    if (data.result)
                                        $("#usernameValidation").text("Username already taken.");

                                    else
                                        $("#usernameValidation").text("");
                                },

                                error: function () {
                                    $("#errorModal-header").text("Error")
                                    $("#errorModal-body").text("Something went wrong when processing request")
                                    $("#errorModal").modal('show')
                                }
                            })
                        }
                    },

                    error: function () {
                        $("#errorModal-header").text("Error")
                        $("#errorModal-body").text("Something went wrong when processing request")
                        $("#errorModal").modal('show')
                    }

                    })


            });

            $("#txtUsername").keyup(function () {
                $("#usernameValidation").text("");
            });
        });


    </script>
}
