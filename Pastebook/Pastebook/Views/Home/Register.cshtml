@model Pastebook.Models.RegisterViewModel

@{
    ViewBag.Title = "Account Registration";
}
@Styles.Render("~/Content/error.css")

@using (Html.BeginForm(new { @id = "register-form" }))
{
    <div class="form-horizontal">
        <div class="container">
            <div id="registerForm" class="col-md-6 col-md-offset-3">
                @*<div id="register-header" class="text-center">
                    <h1>Account Registration</h1>
                </div>*@
                <div id="register-header-text">Required fields(*)</div>
                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-envelope required-asterisk"></span> Email*</span>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.User.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "text-line", placeholder = "email" , id="txtEmail"} })
                        @Html.ValidationMessageFor(model => model.User.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                        <span class="label-danger validation" id="emailValidation"></span>
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-user"></span> Username*</span>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.User.USER_NAME, new { htmlAttributes = new { @class = "text-line", placeholder = "username", id="txtUsername" } })
                        @Html.ValidationMessageFor(model => model.User.USER_NAME, "", new { @class = "text-danger" })
                        <span class="label-danger validation" id="usernameValidation"></span>
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-lock"></span> Password*</span>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "text-line", placeholder = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-lock"></span> Confirm Password*</span>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "text-line", placeholder = "re-enter password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-user"></span> First name*</span>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.User.FIRST_NAME, new { htmlAttributes = new { @class = "text-line", placeholder = "first name" } })
                        @Html.ValidationMessageFor(model => model.User.FIRST_NAME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-user"></span> Last name* </span>
                    
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.User.LAST_NAME, new { htmlAttributes = new { @class = "text-line", placeholder = "last name" } })
                        @Html.ValidationMessageFor(model => model.User.LAST_NAME, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-gift"></span> Birthday*</span>
                    
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.User.BIRTHDAY, new { htmlAttributes = new { @class = "text-line", @type = "date", max = DateTime.Now.ToString("yyyy-MM-dd") } })
                        @Html.ValidationMessageFor(model => model.User.BIRTHDAY, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <span class="col-md-4"><span class="fa fa-venus-mars"></span> Gender</span>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.User.GENDER, (List<SelectListItem>)ViewBag.Genders, "select gender", new { @class = "text-line" })
                        @Html.ValidationMessageFor(model => model.User.GENDER, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-home"></span> Country </span>
                        
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.User.COUNTRY_ID, (List<SelectListItem>)ViewBag.Countries, "select country", new { @class = "text-line" })
                        @Html.ValidationMessageFor(model => model.User.COUNTRY_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <span class="col-md-4"><span class="glyphicon glyphicon-phone"></span> Mobile Number</span>
                    
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.User.MOBILE_NO, new { htmlAttributes = new { @class = "text-line", placeholder = "mobile number" } })
                        @Html.ValidationMessageFor(model => model.User.MOBILE_NO, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="pull-right ">
                        <input type="submit" value="Create Account" class="btn btn-default" id="btnCreate"/>
                        <input type="button" value="Cancel" class="btn btn-default" id="btnCancel" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        var checkUsernameExistUrl = '@Url.Action("CheckIfUsernameExist", "Pastebook")'
        var checkEmailExistUrl = '@Url.Action("CheckEmailIfExists", "Pastebook")'
    </script>

    <script>
        $(document).ready(function () {
            $("#btnCancel").click(function (event) {
                var url = '@Url.Action("Index", "Pastebook")';
                window.location.href = url;
            });

            $("#txtEmail").blur(function () {
                var data = {
                    email: $("#txtEmail").val()
                }

                $.ajax({
                    url: checkEmailExistUrl,
                    data: data,
                    type: 'POST',
                    success: function (data) {
                        if(data.result)
                            $("#emailValidation").text("Email already taken.");

                        else
                            $("#emailValidation").text("");
                    },

                    error: function () {
                        $("#errorModal-header").text("Check email if it exists error")
                        $("#errorModal-body").text("Something went wrong when checking if the email exists")
                        $("#errorModal").modal('show')
                    }
                })
            });

            $("#txtEmail").keyup(function () {
                $("#emailValidation").text("");
            });

            $("#txtUsername").blur(function () {
                var data = {
                    username: $("#txtUsername").val()
                }

                $.ajax({
                    url: checkUsernameExistUrl,
                    data: data,
                    type: 'POST',
                    success: function (data) {
                        if (data.result)
                            $("#usernameValidation").text("Username already taken.");

                        else
                            $("#usernameValidation").text("");
                    },

                    error: function () {
                        $("#errorModal-header").text("Check username if it exists error")
                        $("#errorModal-body").text("Something went wrong when checking if the username exists")
                        $("#errorModal").modal('show')
                    }
                })
            });

            $("#txtUsername").keyup(function () {
                $("#usernameValidation").text("");
            });
        });
    </script>
}
