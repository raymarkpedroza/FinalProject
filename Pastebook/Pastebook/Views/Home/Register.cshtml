@model Pastebook.Models.RegisterViewModel


@using (Html.BeginForm(new { @id = "register-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    <div id="registerForm" class="container">
        <h4>Account Registration</h4>
        <hr />
        <h4>Fill up the required fields(*).</h4>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.User.EMAIL_ADDRESS, htmlAttributes: new { @class = "control-label col-md-4  required-asterisk" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.USER_NAME, htmlAttributes: new { @class = "control-label col-md-4 required-asterisk" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.USER_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.USER_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4  required-asterisk" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    @*@Html.HiddenFor(model => model.User.Password)*@


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4  required-asterisk" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            @{
                List<SelectListItem> listOfGenders = new List<SelectListItem>();

                listOfGenders.Add(new SelectListItem { Text = "Male", Value = "M" });
                listOfGenders.Add(new SelectListItem { Text = "Female", Value = "F" });
            }

            <div class="form-group">
                @Html.LabelFor(model => model.User.GENDER, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.User.GENDER, listOfGenders, "-- Select Gender --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.User.GENDER, "", new { @class = "text-danger" })
                </div>
            </div>
            
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.User.FIRST_NAME, htmlAttributes: new { @class = "control-label col-md-4  required-asterisk" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.FIRST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.FIRST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.LAST_NAME, htmlAttributes: new { @class = "control-label col-md-4  required-asterisk" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.LAST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.LAST_NAME, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.BIRTHDAY, htmlAttributes: new { @class = "control-label col-md-4  required-asterisk" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.BIRTHDAY, new { htmlAttributes = new { @class = "form-control", id = "dtpBirthday" } })
                    @Html.ValidationMessageFor(model => model.User.BIRTHDAY, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.ListOfCountryModel != null)
            {
                List<SelectListItem> listOfCountries = new List<SelectListItem>();

                foreach (var country in Model.ListOfCountryModel)
                {
                    listOfCountries.Add(new SelectListItem
                    {
                        Text = country.COUNTRY,
                        Value = country.ID.ToString()
                    });
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.User.COUNTRY_ID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.User.COUNTRY_ID, listOfCountries, "-- Select Country --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.User.COUNTRY_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

            }

            <div class="form-group">
                @Html.LabelFor(model => model.User.MOBILE_NO, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.User.MOBILE_NO, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.MOBILE_NO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="pull-right ">
                    <input type="submit" value="Create Account" class="btn btn-default" />
                    <input type="button" value="Cancel" class="btn btn-default" id="btnCancel"/>
                </div>
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {
            $(function () {
                $("#dtpBirthday").datepicker({
                    dateFormat: 'mm/dd/yy',
                    minDate: new Date('01/01/1600'),
                    maxDate: '0',
                    autoclose: true,
                    changeMonth: true,
                    changeYear: true,
            });

                $("#dtpBirthday").datepicker().datepicker("setDate", new Date());
                $("#dtpBirthday").keyup(function () {
                    if ($(this).val().length == 2) {
                        $(this).val($(this).val() + "/");
                    } else if ($(this).val().length == 5) {
                        $(this).val($(this).val() + "/");
                    }
                });
            });

            $("#btnCancel").click(function (event) {
                event.preventDefault();
                var url = '@Url.Action("Index", "Home")';
                window.location.href = url;
            });
        });
    </script>
}
